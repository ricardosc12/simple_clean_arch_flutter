{
    "f_rest_api": {
        "prefix": "f_rest_api",
        "body": [
            "import 'package:dio/dio.dart';",
            "import 'package:flutter_application_1/core/adapters/response_api_adapter.dart';",
            "import 'package:flutter_application_1/core/data/endpoints.dart';",
            "import 'package:flutter_application_1/core/data/network_service.dart';",
            "import 'package:flutter_application_1/core/dtos/respose_api_dto.dart';",
            "import 'package:flutter_riverpod/flutter_riverpod.dart';",
            "import 'package:multiple_result/multiple_result.dart';",
            "import 'package:retrofit/retrofit.dart';",
            "",
            "part '$TM_FILENAME_BASE.g.dart';",
            "",
            "final $2ApiProvider = Provider<$1>((ref) {",
            "  final networkService = ref.watch(networkServiceProvider);",
            "  return $1(networkService);",
            "});",
            "",
            "@RestApi(callAdapter: ResponseAdapter)",
            "abstract class $1 {",
            "  factory $1(Dio dio) = _$1;",
            "",
            "  @POST(Endpoints.$4)",
            "  Future<Result<ApiSuccess<$3Response>, ApiError>> getDocs(",
            "    @Body() $3Param params,",
            "  );",
            "}",
            ""
        ],
        "description": ""
    },
    "f_rest_repository": {
        "prefix": "f_rest_repository",
        "body": [
            "import 'package:fast_immutable_collections/fast_immutable_collections.dart';",
            "import 'package:flutter_application_1/core/exceptions/app_error.dart';",
            "import 'package:flutter_application_1/shared/data/source/$2_api.dart';",
            "import 'package:flutter_riverpod/flutter_riverpod.dart';",
            "import 'package:multiple_result/multiple_result.dart';",
            "",
            "final $2RepositoryProvider = Provider<$1Repository>((ref) {",
            "  final $2Api = ref.watch($2ApiProvider);",
            "  return DocRepositoryRemoteImpl($2Api);",
            "});",
            "",
            "abstract class $1Repository {",
            "  Future<Result<result, AppError>> get($3Param params);",
            "}",
            "",
            "class DocRepositoryRemoteImpl implements $1Repository {",
            "  final $1Api _$2Api;",
            "",
            "  const DocRepositoryRemoteImpl(this._$2Api);",
            "",
            "  @override",
            "  Future<Result<result, AppError>> get(",
            "    $3Param params,",
            "  ) async {",
            "    final res = await _$2Api.get$1(params);",
            "",
            "    return res.when(",
            "      (response) {",
            "        return Success(IList(response.dados.$2));",
            "      },",
            "      (e) {",
            "        return Error(AppError(message: e.message));",
            "      },",
            "    );",
            "  }",
            "}",
            ""
        ],
        "description": ""
    }
}